javascript:(function(){if(window.mbChecker){return;}window.mbChecker=true;const style=document.createElement('style');style.textContent='.musicbrainz-indicator{display:inline-block;margin-left:5px;font-weight:bold;font-size:16px;cursor:help}.has-musicbrainz{color:#2ecc71}.no-musicbrainz{color:#e74c3c}.checking-musicbrainz{color:#f39c12}.error-musicbrainz{color:#95a5a6}.mb-search-link{margin-left:5px;font-size:14px;text-decoration:none}';document.head.appendChild(style);async function getWikidataId(t,e){const n=`https://${e}.wikipedia.org/w/api.php?action=query&prop=pageprops&titles=${encodeURIComponent(t)}&format=json&origin=*`,i=await fetch(n),a=await i.json(),c=a.query.pages,o=Object.keys(c)[0];return c[o].pageprops?.wikibase_item}async function hasAnyMusicBrainzId(t){const e=`https://www.wikidata.org/w/api.php?action=wbgetentities&ids=${t}&props=claims&format=json&origin=*`,n=await fetch(e),i=await n.json(),a=i.entities[t];if(!a||!a.claims)return false;return!!(a.claims.P434||a.claims.P435||a.claims.P436)}function addIndicator(t,e,n){const i=t.querySelector('.musicbrainz-indicator');i&&i.remove();const a=document.createElement('span');switch(a.className='musicbrainz-indicator',e){case'has':a.textContent='‚úì',a.classList.add('has-musicbrainz'),a.title='Has MusicBrainz ID (artist, work, or release group)';break;case'no':a.textContent='‚úó',a.classList.add('no-musicbrainz'),a.title='No MusicBrainz ID';break;case'checking':a.textContent='‚ü≥',a.classList.add('checking-musicbrainz'),a.title='Checking...';break;case'error':a.textContent='‚ö†',a.classList.add('error-musicbrainz'),a.title=n||'Error checking'}t.appendChild(a)}function addMusicBrainzSearchLink(linkEl){const cleanText=linkEl.textContent.replace(/[‚úì‚úó‚ü≥‚ö†].*$/, '').trim();const searchUrl=`https://musicbrainz.org/search?query=${encodeURIComponent(cleanText)}&type=artist&method=indexed`;const searchLink=document.createElement('a');searchLink.href=searchUrl;searchLink.target='_blank';searchLink.textContent='üîç';searchLink.className='mb-search-link';searchLink.style.textDecoration='none';linkEl.parentNode.insertBefore(searchLink, linkEl.nextSibling)}async function processArtistLink(t,e){const n=decodeURIComponent(t.href.split('/wiki/')[1]);addIndicator(t,'checking');addMusicBrainzSearchLink(t);try{const i=await getWikidataId(n,e);if(!i)return void addIndicator(t,'error','No Wikidata ID');const a=await hasAnyMusicBrainzId(i);a?(addIndicator(t,'has'),console.log(`‚úì ${n} has MusicBrainz ID`)):(addIndicator(t,'no'),console.log(`‚úó ${n} has no MusicBrainz ID`))}catch(i){console.error(`Error processing ${n}:`,i),addIndicator(t,'error','Error: '+i.message)}}async function processAllLinks(){const t=window.location.hostname.split('.')[0],e=document.querySelector('#mw-pages')||document.querySelector('#mw-content-text');if(!e)return void alert('No suitable content area found on this page');const n=e.querySelectorAll('a[href*="/wiki/"]:not([href*=":"]):not([href*="#"])');if(0===n.length)return void alert('No Wikipedia article links found on this page');console.log(`Found ${n.length} links to check`);for(let i=0;i<n.length;i+=5){const a=Array.from(n).slice(i,i+5);await Promise.all(a.map((n=>processArtistLink(n,t)))),i+5<n.length&&await new Promise((t=>setTimeout(t,1e3)))}console.log('Finished checking all links')}processAllLinks()})();
